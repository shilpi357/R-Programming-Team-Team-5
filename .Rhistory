supermarket_sales...Sheet1 <- read.csv("C:/Users/shilp/Desktop/r programming/supermarket_sales - Sheet1.csv", header=FALSE)
View(supermarket_sales...Sheet1)
srt(supermarket_sales)
srt(supermarket_sales...Sheet1)
str(supermarket_sales...Sheet1)
names(supermarket_sales...Sheet1)
variable name = supermarket_sales...Sheet1[1,v1]
head(supermarket_sales...Sheet1, 15)
distinct(mydata,NAME, .keep_all= TRUE)
distinct(supermarket_sales...Sheet1,v1, .keep_all=TRUE)
library(dplyr)
data_unique <- supermarket_sales...Sheet1[!duplicated(supermarket_sales...Sheet1), ]
data_unique
newdata <-supermarket_sales...Sheet1[order(-V3),]
newdata <-supermarket_sales...Sheet1[order(-city),]
newdata <-supermarket_sales...Sheet1[order(-$ v3),]
newdata <-supermarket_sales...Sheet1[order(v3),]
newdata <-supermarket_sales...Sheet1[order (v3),]
newdata <-supermarket_sales...Sheet1[order (-cyl),]
newdata <-supermarket_sales...Sheet1[desc(-city), ]
?sort
sorteddata <- order(supermarket_sales...Sheet1$v7)
sort(v7,FALSE)
sort(y)
?sort
v7
y
$V7
?sort
x
install.packages(dplyr)
install.packages("dplyr")
library(dplyr)
?sort
y
supermarket_sales...Sheet1 %>% arrange(v7)
supermarket_sales...Sheet1 %>% arrange("v7")
supermarket_sales...Sheet1 %>% arrange(desc("v7"))
supermarket_sales...Sheet1 %>% arrange(desc("v8"))
supermarket_sales...Sheet1 %>% arrange(desc("v8"))
supermarket_sales...Sheet2 <- supermarket_sales...Sheet1 %>% arrange(desc("v8"))
View(supermarket_sales...Sheet1)
View(supermarket_sales...Sheet2)
arrange(supermarket_sales...Sheet2, v5)
arrange(supermarket_sales...Sheet2, "v5")
my_data %>% arrange(desc(Sepal.Length))
supermarket_sales...Sheet2 %>% arrange("v2")
supermarket_sales...Sheet2 %>% arrange("Branch")
supermarket_sales...Sheet2 %>% arrange("$ v2")
supermarket_sales...Sheet2 %>% arrange("$ v2")
df
data_12 <- supermarket_sales...Sheet2 %>% arrange("Branch")
data_12[order(v1),]
data_12[order("v1"),]
data_12[:10]
x <- data.frame(data_12)
x
x[“v1”]
x["v1"]
data_12[:10]
# Import the data and look at the first six rows
carSpeeds <- read.csv(file = 'data/car-speeds.csv')
head(carSpeeds)
# Import the data and look at the first six rows
data_12 <- read.csv(file = 'supermarket_sales.csv')
pwd
getwd()
cd Git
setwd("C:\Users\shilp\Documents\GitHub\R-Programming-Team-Team-5")
setwd("C:/Users/shilp/Documents/GitHub/R-Programming-Team-Team-5")
# Import the data and look at the first six rows
data_12 <- read.csv(file = 'supermarket_sales.csv')
head(data_12)
data_12[order(v1),]
data_12[order("v1"),]
data_12[order("City"),]
data_12["City"]
data_12[order("City"),]
data_12[order(City),]
data_12[order(data_12$City),]
install.packages("rmarkdown")
install.packages("rmarkdown")
# Import the data and look at the first six rows
sales <- read.csv(file = 'supermarket_sales.csv')
# Display top 6 rows
head(sales)
data_12[order(data_12$City),]
data_12[order(data_12$City),]
data_12[order(data_12$Quantity),]
# cutome function
View(sales)
Addchar <- addchar ("Product.line"){}
Addquant.quant <- function("Quantity"){Quantity+1}
Addquant.quant <- function("Quantity"){"Quantity"+1}
Addquant.quant <- function(Quantity){Quantity+1}
View(Addquant.quant)
function("Quantity)")
function(Quantity)
1
View(Addquant.quant)
function(Quantity){Quantity+1}
add <- add(x){}
add <- add(x){result <-x *10}
add <- add(x){result <-x *10 print(result)}
addo <- addo(Quantity){result <- Quantity+1 print(result)}
Salesdata<- Data(34,35,36)
function(Quantity){Quantity+1}
function(Quantity){Quantity+1}
function(Quantity){Quantity+1}
View(sales)
install/packages("tidyverse")
install.packages("tidyverse")
library("tidyverse")
sales1 <- as_tibble_row(sales)
sales1 <- as_tibble_row(sales) sales1
sales %>%mutate(Quantity1= Unit.price * Quantity)
uname<- function(){str<- readline(prompt="Enter the Name:")}
return(as.character(str))
uname<- function(){str<- readline(prompt="Enter the Name:")
return(as.character(str))
}
print(uname())
head(sales)
sales1 <- as_tibble_row(sales) sales1
sales<- sales[order(Unit.price)]
sales<- sales[order("Unit.price")]
View(sales)
View(sales)
sales %>% arrange(desc(Unit.price))
sales %>% arrange(desc("Unit.price"))
